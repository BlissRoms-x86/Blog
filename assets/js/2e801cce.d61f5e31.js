"use strict";(self.webpackChunkblog_1=self.webpackChunkblog_1||[]).push([[9450],{6029:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"asob-q2-2023","metadata":{"permalink":"/asob-q2-2023","source":"@site/blog/2023/asob-q2-2023.md","title":"A State of Bliss : A Blissful Return - 2nd Quarter 2023","description":"A State of Bliss 2nd Quarter 2023","date":"2023-07-02T00:00:00.000Z","formattedDate":"July 2, 2023","tags":[{"label":"blissos","permalink":"/tags/blissos"},{"label":"android-generic","permalink":"/tags/android-generic"},{"label":"bliss-x86","permalink":"/tags/bliss-x-86"},{"label":"lmodroid","permalink":"/tags/lmodroid"},{"label":"blissoslinux","permalink":"/tags/blissoslinux"}],"readingTime":16.21,"hasTruncateMarker":false,"authors":[{"name":"Jon West","title":"Founder / Developer @BlissCoLabs / Incorporator & CTO / Bliss OS / Android-Generic Project @BlissLabs","url":"https://github.com/electrikjesus","imageURL":"https://avatars.githubusercontent.com/u/8572619?v=4","key":"electrikjesus"},{"name":"HMTheBoy154","title":"Bliss OS Maintainer","url":"https://github.com/hmtheboy154","imageURL":"https://avatars.githubusercontent.com/u/39849246?v=4","key":"hmtheboy154"}],"frontMatter":{"slug":"asob-q2-2023","title":"A State of Bliss : A Blissful Return - 2nd Quarter 2023","authors":["electrikjesus","hmtheboy154"],"description":"A State of Bliss 2nd Quarter 2023","img":"assets/asob_q2_2023/image6.png","date":"2023-07-02T00:00:00.000Z","comments":true,"tags":["blissos","android-generic","bliss-x86","lmodroid","blissoslinux"]},"nextItem":{"title":"[announcement] Bliss OS Linux Hybrid Preview (Bliss OS Go edition)","permalink":"/bliss-os-linux-hybrid-preview"}},"content":"The last couple months have been pretty busy at Bliss. Since January/February, we\u2019ve been able to get a lot of work done on many different fronts. With my return to Bliss, we\u2019ve started a collaborative contract development and consulting firm named [Bliss Co-Labs](https://blisscolabs.dev/), and have been working on a few client projects. Without letting the open-source side of things skip a beat, we\u2019ve also been busy making changes and working on quite a few new updates and projects. So we think it\u2019s about time to at least announce a few of the changes we have in store, as well as a few announcements for new projects or major project updates. \\n\\n## Updates\\n\\nLet\u2019s start with the release updates first. HMTheBoy154 has been busy pushing out some truly amazing innovations for Bliss OS, bringing the platform to support many more devices, and expanding its configurable layers past the graphics stack, and into many others. \\nHe has this to say about what has been going on recently:\\n\\n*Ever since Jon joined Esper, I\u2019ve decided to continue his work. If you join our Telegram group, you\u2019ll notice that a lot has changed since the last releases like Bliss OS 14.3 or 15.1. In this post, let\u2019s take a look at what\u2019s new in these versions.*\\n\\n### Bliss OS v14.10 Release\\n\\n![alt text](assets/asob_q2_2023/image9.png \\"Bliss OS v14.10 Release\\")\\n\\n*Compared to 14.3, the new Bliss OS 14.10 has improved a lot. Although there are some features that I have to remove for example the long iso name to explain what\'s inside the build or Gearlock (while it is a really good recovery solution for Android-x86, I still decided to remove it because it need to be rewritten), I\'ve been putting a lot of changes into it, some of them were on my old [ProjectSakura-x86](https://forum.xda-developers.com/t/beta-11-projectsakura-x86-for-pcs-official.4329533/) builds. Also, please remember that most of these are also available in Bliss OS 15.8 builds and more on that later.*\\n\\n*Here are the new changes :*\\n\\n- Taskbar apps like farmerbb\'s Taskbar or axel358\'s Smart Dock are being updated to the latest.\\n- Kernel has been updated to 5.15.x, this is the same kernel I use on PS-x86 but now with more optimization & hardware support. Also mgLRU, eBPF, DMA-BUF Heap, etc are all being enabled.\\n- ESDFS is being used to bind mount apps\' data just like ChromeOS, this is to fix apps that can\'t be able to read data or obb on Bliss, causing it to crash.\\n- Using Intel\'s Bluetooth HAL, with some changes from Android-x86 to support more Bluetooth cards than just Intel one.\\n- You can now make a list like [modprobe.conf](https://linux.die.net/man/5/modprobe.conf) at /data/vendor/modules.options or /data/vendor/modules.blocklist if you want to blacklist a module.\\n- Bliss can now show the device information just like the old Bliss OS 11 or Android-x86.\\n- virt_wifi is now disabled by default, you can still use it with VIRT_WIFI=1\\n- If you are using a tablet or convertible laptops that have an accelerometer, our iio sensors can now be able to rotate the screen.\\n- PGO optimization for art. This is a feature by Intel to enhance VM workload performance, you can read about it [here](https://www.intel.com/content/www/us/en/developer/articles/technical/enhance-vm-workloads-performance-with-pgo.html). \\n- AutoFast JNI, this is also [another feature by Intel](https://01.org/blogs/2019/intel-optimizations-android-pie-runtime-compiler) to improve performance on Android running in x86 hardware . \\n- zram is enabled by default with zstd compression.\\n- aptX & aptX HD Bluetooth codecs support using Android 13\'s encoders. Bliss is the first Android build on x86 hardware to get this publicly.\\n- `toybox` is being upstreamed with additional tools such as `eject` or `rfkill`. Also, we\'ve included usb.ids and pci.ids for `lsusb` & `lspci` so you can check the USB or PCI devices name.\\n- If you want to mount all of your partitions into Bliss, add `INTERNAL_MOUNT=1` into the cmdline.\\n- If you want to try AOSP\'s experimental \\"PC Mode\\", add `PC_MODE=1` into the cmdline and try.\\n- If you want your Bliss OS build to be recognized as a Google Play Games for PC image, add `HPE=1` into the cmdline and reset Play Store.\\n- You can now force your mouse click as touch, this is to help fixing apps that only use touch input only.\\n- Mouse acceleration can be disabled ,also scroll wheel too.\\n- Night Light is now available.\\n- BoringDroid is back. \\n- For media, while using OMX.ffmpeg codecs as usual, I also provide Codec2 implementation of ffmpeg codecs, made by Micheal Goffioul. Alongside with that, new VAAPI drivers for newer Intel iGPU & other hardware is also being built to support hardware acceleration decoder. I also include a lot of parameters that you can use to get the best result from Bliss OS, you can find it at our [Docs](https://docs.blissos.org/configuration/configuration-through-command-line-parameters/).\\n- For graphics, our graphics stack is being improved significantly compared to the previous builds, not only that, like media, we provide a lot of options through parameters too. You can see some of our changes here like : \\n  * Vulkan is now being enabled by default. `VULKAN=1` is dead, long live `VULKAN=1`. \\n  * Mesa is being updated to latest version (23.1) with LLVM16 for AMDGPUs.\\n  * Also in Mesa we\'ve activated xmlconfig, with this you can create custom configuration for apps & games related to graphics like spoofing GPUs name & vendor. We will update more information in our Docs soon.\\n  * While we include a lot of Gralloc & HWC options and we pick the best one depending on what GPU Bliss is running. So if you don\'t want to play with any of this, you can just be sure that you are running the best one that is being tested by us & the community.\\n  * For minigbm (and all the different variations that we have), you can switch to Gralloc4 with `GRALLOC4_MINIGBM=1` parameter.\\n  * You can force OpenGLES version with `FORCE_GLES=<version>` parameter.\\n  * For software rendering solutions, not only we are using Swiftshader, but also SwANGLE. A combination of ANGLE EGL driver & SwiftShader Vulkan made by Google. SwANGLE is already being used on Android 13 but we\'ve backported it.\\n\\n*And for the first time, Bliss is using the new KernelSU for root solution. Not only that, Bliss OS is the first x86_64 Android build ever to integrate KernelSU into it.*\\n\\n![alt text](assets/asob_q2_2023/image13.png \\"Bliss with KSU\\")\\n\\n*These builds will also be moved from our development branch to our stable branch, so you will soon find these builds on our [blissos-x86 sourceforge](https://sourceforge.net/projects/blissos-x86/) (where we release our stable builds).*\\n\\n### Bliss OS v15.8 Release\\n\\n![alt text](assets/asob_q2_2023/image11.png \\"Bliss OS v15.8 Release\\")\\n\\n*Bliss OS 15.8 has a different starting point than Bliss OS 15.1. Firstly, Bliss OS 15.8 is based on Android 12L unlike 15.1 which uses Android 12. Second, Bliss OS 15.8 common tree (`device/generic/common`) is based on my 14.10 tree with a few patches instead of using 15.1 one. Which is why I said that most of the new features from 14.10 are also available on 15.8. All the changes you see in 14.10 are also in this version, but with Android 12L instead.*\\n\\n*These builds will also be moved from our development branch to our stable branch, so you will soon find these builds on our [blissos-x86 sourceforge](https://sourceforge.net/projects/blissos-x86/) (where we release our stable builds).*\\n\\n### The return of Bliss OS Surface Builds\\n\\n![alt text](assets/asob_q2_2023/image10.png \\"Bliss OS Surface\\")\\n\\n*For Bliss OS, Surface Builds used to be a thing in Bliss OS 11 days with a few builds available. Now we\u2019re happy to announce that we\u2019re bringing back the build with a newer kernel (5.15) using patches from [linux-surface](https://github.com/linux-surface/linux-surface) and using the latest ipts/ithc kernel driver as well as iptsd daemon to support touchscreen.*\\n\\n***NOTE** : Not every Microsoft Surface device has to install surface build to make it work, some can just use generic builds, please check our [Documentation](https://docs.blissos.org/) for more info.*\\n\\n## Releases\\n\\nHMTheBoy154 has been working on a super secret project for Bliss, and we are happy to announce the initial beta release of Bliss OS v16.6 (Android 13) for x86_64v2 PC\u2019s, laptops, tablets, etc. Check the release notes for that below. \\n\\n### Bliss OS v16 Beta Release\\n\\n![alt text](assets/asob_q2_2023/image4.png \\"Bliss OS v16 Release\\")\\n\\n*Yes, you heard that right. Today I\'m happy to announce the first public beta build of Bliss OS 16. The development has already started since October 2022 and I\'ve been working together with not only Android-x86 members & contributors, but also with BlissROMs members and we\'ve made a lot of progress since then. We even work with the LibreMobileOS team to fix some issues like freeform.*\\n\\n*Currently BlissOS 16 is on 16.7 to match with the version on BlissROMs. While it\u2019s still on Beta stage, we can\'t wait to release our new images so you can experience them.*\\n\\n### New Bliss OS Logo Announcement\\n\\nWith the Bliss OS 16 announcement, Designer [XelXen (aka WildWaze)](https://github.com/xelxen/) has also been working with us on a redesigned logo for this and future releases. Not only that, he also included some new wallpapers for us to match with this new design elements.\\n\\n```\\n\u201cThe new logo of BlissOS depicts a human figure standing in between petals of lotus, representing the transparency and diversity of the operating system. The figure also holds a perfectly shaped lotus flower, which is the emblem of BlissLabs and perfection.\u201d\\n```\\n\\nLogo 1            |  Logo 2\\n:-------------------------:|:-------------------------:\\n![alt text](assets/asob_q2_2023/image12.png \\"Bliss OS v16\\")  | ![alt text](assets/asob_q2_2023/image14.png \\"Bliss OS v16\\")\\n\\nWallpaper 1            |  Wallpaper 2\\n:-------------------------:|:-------------------------:\\n![alt text](assets/asob_q2_2023/wall01.png \\"Bliss OS v16\\")  | ![alt text](assets/asob_q2_2023/wall02.png \\"Bliss OS v16\\")\\n\\nWallpaper 3            |  Wallpaper 4\\n:-------------------------:|:-------------------------:\\n![alt text](assets/asob_q2_2023/wall03.png \\"Bliss OS v16\\")  | ![alt text](assets/asob_q2_2023/wall04.png \\"Bliss OS v16\\")\\n\\n### Android-Generic Project Manager Release\\n\\nWe are excited to announce the release of Android-Generic Project Manager (AGPM), a tool that makes it easier to build and configure AOSP based projects. AGPM provides a number of features that can help you save time and effort, including:\\n\\n- Automatic repo init: AGPM can automatically initialize a new AOSP project or update an existing one.\\n- Python virtualenv support: AGPM can wrap your project in a Python virtualenv, which allows you to install packages and run scripts without affecting the rest of your system (quite handy when you are using a shared server over ssh and do not have root access for installing packages).\\n- Check Project Status: AGPM can check a project folders repos against the manifest, and it will build a list of any repos with uncommitted changes, or if the repos are not pushed yet. \\n- Option to push changes: Depending on what Update Checking finds, you can push your updates to the repos found to be behind\\n- Common Tools: Create New, Update, Delete, etc. \\n\\nScreenshots:\\n\\n![alt text](assets/asob_q2_2023/image8.jpg)\\n\\n(Main Menu window: Zenity mode)\\n\\n![alt text](assets/asob_q2_2023/image2.jpg)\\n\\n(Check Project Status results: Zenity mode)\\n\\nCompatibility:\\n\\nAGPM is designed to be flexible and extensible, so you can add your own project configurations and features. Currently, we support the following projects:\\n- AOSP\\n- Bliss ROM\\n- Lineage OS\\n- Bliss OS\\n\\nWe have a planned features list a mile long, and we are always working to add support for more projects. If you have any feedback or suggestions, please feel free to open an issue on the [AGPM GitHub repository](https://github.com/android-generic/ag-project-manager).\\n\\nWe hope you find AGPM to be a useful tool for building and configuring AOSP based projects.\\n\\n### Android-Generic Project (v2023) Release\\n\\nWe are excited to announce the release of Android-Generic Project (v2023), a major update that brings many new features and improvements.\\n\\nKey Features\\n\\n- Support for multiple targets: AG v2023 can now be used to build images for a variety of targets, including Android phones, tablets, Raspberry Pi, emulators, TVs, and PCs. As usual, we start things out with the PC target, and let that act as an example for the rest.\\n- Target-based system: AG v2023 uses a new target-based system that makes it easier to build images for specific targets.\\n- Target variants: AG v2023 now supports target variants, which allow you to build images with different configurations for different targets. This system is used to have separate base structures for targets. So for the PC builds (target), we will have the variants: Android-x86 base, Bliss OS base, Bliss OS Go, etc.\\n- Conditions for menu items: AG v2023 allows you to use conditions to control the availability of menu items. This makes it possible to create more complex and flexible menus.\\n- Addon templates: AG v2023 includes addon templates that you can use to create your own addons. Addons are a great way to extend the functionality of AG.\\n- Public and private addons: AG v2023 supports both public and private addons. Public addons are available to everyone, while private addons are only available to a select group of users. \\n\\nUpdates\\n\\nIn addition to the new features listed above, AG v2023 also includes a number of updates and improvements. These include:\\n- Updates to the easy-menu system for more dynamic menu options.\\n- A new targets based system.\\n- The ability to add target variants.\\n- The ability to lock the process with conditions per option.\\n- Updated api-32 support.\\n- Added api-33 support.\\n- Reworked manifest structure to include in targets.\\n- Added addon template for contributors to use to create their own addons.\\n- Added Targets template for contributors to use to create their own targets.\\n- Reworked open/private addon structure and added new addons.\\n\\nGeneric/PC Addons\\n\\nThe following new addons have been added for generic/PC targets:\\n- Configurable battery stats addon\\n- Rotation/orientation configuration options through Grub\\n- Expanded LMKD configuration addon\\n- LMKD tuning options through Grub\\n- Memory tuning options through Grub\\n- Performance tuning options through Grub\\n\\nLicensed Addons\\n\\nThe following new addons have been added for licensed targets:\\n- Recents tuning addon\\n- Addons for locking various features\\n- Customizing new user functions addon\\n- Configuring packages on boot (hide/disable/unhide/enable)\\n- Addon for locking the ability for the user to change settings\\n\\nSpecial Requests? contact us\\n\\nWe hope you enjoy these new features and improvements!\\n\\n### Bliss Broad Apparatus Support System (Bliss-Bass)\\n*(Automated Vendor Customization Layer for Bliss OS / Bliss OS Go)*\\n\\nBliss Broad Apparatus Support System (Bliss-Bass) is an automated vendor customization layer for Bliss OS / Bliss OS Go (and eventually BlissROM). It is a toolkit that can be used to help with rebranding, customizations, and app changes for Bliss OS based builds. The toolkit comes with a variety of functions, including:\\n- An autopatch function that applies all required changes to the Bliss OS build.\\n- The ability to define custom sets of changes to be applied before customization.\\n- Integration with AOSP\'s build system, which allows a variety of tools to be accessed before the lunch process starts.\\n- The ability to display a customization menu from the pre-lunch hook, using either dialog or zenity, depending on whether or not a GUI is detected.\\n\\nThe Bliss-Bass toolkit is designed to make it easier for users and companies to start off using Bliss for their products. By automating many of the tasks involved in rebranding and customization, Bliss-Bass can save time and energy, allowing users or engineers to focus on the creative parts of the process.\\n\\nHere are some additional details about the autopatch function:\\n- The autopatch function is available from the command line using \u2018check_patchsets\u2019 or through the menu.\\n- The autopatch function can be used to apply a variety of changes to the Bliss OS build, including changes to the kernel, bootloader, system image, and vendor image.\\n- The autopatch function can be used to define custom sets of changes to be applied. This can be useful for organizations that need to make specific changes to Bliss OS for their own products.\\n\\nJust like some of our other toolkits, this project integrates itself into AOSP\u2019s build system and allows a variety of tools to be accessed before the lunch process starts:\\n\\n![alt text](assets/asob_q2_2023/image1.jpg)\\n\\nAnd when you trigger the customization menu to display from the pre-lunch hook, it can use \u2018dialog\u2019 if there is no display or GUI detected:\\n\\n![alt text](assets/asob_q2_2023/image3.jpg)\\n\\nOr `zenity`, to display the menu options if it does detect a GUI:\\n\\n![alt text](assets/asob_q2_2023/image5.jpg)\\n\\nFurther development is being made to add even more options and tools to Bliss-Bass. The project is open source and available on GitHub at https://github.com/BlissRoms-x86/platform_vendor_branding.\\n\\n### Bliss OS Linux Hybrid Preview\\n*(Bliss OS Go edition)*\\n\\n![alt text](assets/asob_q2_2023/image7.jpg)\\n\\nAs our collaborations with [Penguins-Eggs](https://penguins-eggs.net/) continues, we\u2019ve started working on a new hybrid of Linux and Android, much like the work we do for [Waydroid-Linux](https://waydro.id/#wdlinux). This will also be a new addition to the Bliss OS lineup, featuring a number of advancements to running Android on PC hardware with full hardware access and control. These builds bring the manageability of a full blown Linux distro, along with an Android side for usability and compatibility. It also features a QEMU based Bliss OS session to help with configuration alongside Linux, and Bliss OS specific grub menu options to allow the Android side to boot on bare-metal, taking full advantage of the hardware. \\n\\nThe initial test images of this hybrid come with Bliss OS Go, but we will be creating more variants as we continue development. \\n\\nFeatures:\\n\\n- Based on Lubuntu 22.04.x LTS\\n- Stripped of Snap and other Ubuntu telemetry\\n- Includes Ubuntu expanded hardware support drivers\\n- QEMU based Bliss OS session\\n- Bliss OS grub menu options (for running on bare-metal hardware)\\n- Includes basic update and management scripts for Android side\\n\\nLots more, but we are just getting started\u2026  \\n\\nLive Boot Info:\\n\\n```\\nUser: Live\\nPassword: evolution\\n```\\n\\n- Step 1:\u200b Live boot (boots to xfce4)\\n- Step 2:\u200b Run installer (last step shows pop-up to specify data.img size), Done.\\n- Step 3:\u200b Reboot (hitting esc once when rebooting to show Grub menu, and select Bliss OS, or xubuntu)\\n\\n**Notes**:\u200b Autologin is enabled, will launch last loaded session choice from Login screen\\n\\nDownloads:\\nDownload the xubuntu based preview release on Mega:\\nhttps://mega.nz/file/rxgg2CIa#Xe54bBwyrrYZUnawkktKKxnJm9KqHSRPhrud7oXfqaU \\n\\nOr Debian & Arch based versions from penguins-eggs sourceforge (Marked with \u201cbliss go\u201d):\\nhttps://sourceforge.net/projects/penguins-eggs/files/ISOS/waydroid/  \\n\\n## New Collaborations\\n### LibreMobileOS\\n\\n![alt text](assets/asob_q2_2023/image15.png \\"LMODroid\\")\\n\\nWe are excited to announce our collaboration with [LibreMobileOS](https://libremobileos.com/), a project that develops and promotes privacy-focused mobile operating systems. As part of this collaboration, we have been working with LibreMobileOS to develop LMODroid-x86, a version of their operating system that is designed to run on x86-based tablets and PCs.\\n\\nLMODroid-x86 was created using Android-Generic Project v2023, a free and open-source prototyping toolkit used to create x86 based Android projects, and other targets. The operating system will be pre-installed with a variety of privacy-focused applications, including a web browser, desktop mode, digital wellbeing (coming soon), and file manager.\\n\\nWe believe that LMODroid-x86 will be a valuable addition to the LibreMobileOS ecosystem. The operating system will provide users with a privacy-focused alternative to the major mobile operating systems, and it will help to promote the use of open-source software.\\nWe would like to thank LibreMobileOS for their collaboration on this project. We are excited to work with them to develop LMODroid-x86 and to help make it available to users around the world.\\n\\nWe would also like to thank HMTheBoy154 for their contributions to this project. Their hard work and dedication has been essential to the success of the project.\\n\\nWe are confident that LMODroid-x86 will be a valuable resource for users who are looking for a privacy-focused and secure mobile operating system. We look forward to sharing more information about the project in the coming months."},{"id":"bliss-os-linux-hybrid-preview","metadata":{"permalink":"/bliss-os-linux-hybrid-preview","source":"@site/blog/2023/bliss-os-linux-hybrid-preview.md","title":"[announcement] Bliss OS Linux Hybrid Preview (Bliss OS Go edition)","description":"Bliss OS Linux Hybrid Preview (Bliss OS Go edition)","date":"2023-06-21T00:00:00.000Z","formattedDate":"June 21, 2023","tags":[{"label":"linux","permalink":"/tags/linux"},{"label":"hybrid","permalink":"/tags/hybrid"},{"label":"android-linux","permalink":"/tags/android-linux"},{"label":"android","permalink":"/tags/android"},{"label":"android-go","permalink":"/tags/android-go"},{"label":"blissos","permalink":"/tags/blissos"},{"label":"android-generic","permalink":"/tags/android-generic"},{"label":"bliss-x86","permalink":"/tags/bliss-x-86"}],"readingTime":1.035,"hasTruncateMarker":false,"authors":[{"name":"Jon West","title":"Founder / Developer @BlissCoLabs / Incorporator & CTO / Bliss OS / Android-Generic Project @BlissLabs","url":"https://github.com/electrikjesus","imageURL":"https://avatars.githubusercontent.com/u/8572619?v=4","key":"electrikjesus"}],"frontMatter":{"slug":"bliss-os-linux-hybrid-preview","title":"[announcement] Bliss OS Linux Hybrid Preview (Bliss OS Go edition)","authors":["electrikjesus"],"description":"Bliss OS Linux Hybrid Preview (Bliss OS Go edition)","img":null,"date":"2023-06-21T00:00:00.000Z","comments":true,"tags":["linux","hybrid","android-linux","android","android-go","blissos","android-generic","bliss-x86"]},"prevItem":{"title":"A State of Bliss : A Blissful Return - 2nd Quarter 2023","permalink":"/asob-q2-2023"},"nextItem":{"title":"[announcement] Bliss OS Go preview","permalink":"/announcement-bliss-os-go"}},"content":"This will be a new addition to the Bliss OS lineup, featuring a number of advancements to running Android on PC hardware. These builds bring the manageability of a full blown Linux distro, along with an Android side for usability and compatibility. It also features a QEMU based Bliss OS session to help with configuration along side Linux, and Bliss OS specific grub menu options to allow the Android side to boot on bare-metal, taking full advantage of the hardware. \\n\\n\\n## Features:\\n\\n- Based on Xubuntu 22.04.x LTS\\n\\n- Stripped of Snap and other Ubuntu apps/telemetry\\n\\n- Includes Ubuntu expanded hardware support drivers\\n\\n- QEMU based Bliss OS session\\n\\n- Bliss OS grub menu options (for running on bare-metal hardware)\\n\\n- Includes basic update and management scripts for Android side\\n\\n- Lots more, but we are just getting started\u2026\\n\\n\\n## Download the preview:\\n\\nhttps://mega.nz/file/rxgg2CIa#Xe54bBwyrrYZUnawkktKKxnJm9KqHSRPhrud7oXfqaU \\n\\n\\n### Live Boot Info:\\n\\nUser: Live\\n\\nPassword: evolution\\n\\n\\n### Step 1:\\n\\nLive boot (boots to xfce4)\\n\\n\\n### Step 2:\\n\\nRun installer (last step shows pop-up to specify data.img size), Done.\\n\\n\\n### Step 3:\\n\\nReboot (hitting esc once when rebooting to show Grub menu, and select Bliss OS, or xubuntu)\\n\\n\\n## Notes:\\n\\nAutologin is enabled, will launch last loaded session choice from Login screen"},{"id":"announcement-bliss-os-go","metadata":{"permalink":"/announcement-bliss-os-go","source":"@site/blog/2023/announcement-bliss-os-go.md","title":"[announcement] Bliss OS Go preview","description":"Announcement for the Bliss OS Go preview","date":"2023-06-08T00:00:00.000Z","formattedDate":"June 8, 2023","tags":[{"label":"android-go","permalink":"/tags/android-go"},{"label":"blissos","permalink":"/tags/blissos"},{"label":"android-generic","permalink":"/tags/android-generic"},{"label":"bliss-x86","permalink":"/tags/bliss-x-86"}],"readingTime":1.735,"hasTruncateMarker":false,"authors":[{"name":"Jon West","title":"Founder / Developer @BlissCoLabs / Incorporator & CTO / Bliss OS / Android-Generic Project @BlissLabs","url":"https://github.com/electrikjesus","imageURL":"https://avatars.githubusercontent.com/u/8572619?v=4","key":"electrikjesus"}],"frontMatter":{"slug":"announcement-bliss-os-go","title":"[announcement] Bliss OS Go preview","authors":["electrikjesus"],"description":"Announcement for the Bliss OS Go preview","img":"assets/blissos-go.png","date":"2023-06-08T00:00:00.000Z","comments":true,"tags":["android-go","blissos","android-generic","bliss-x86"]},"prevItem":{"title":"[announcement] Bliss OS Linux Hybrid Preview (Bliss OS Go edition)","permalink":"/bliss-os-linux-hybrid-preview"},"nextItem":{"title":"[Pilot] EIDU and Bliss OS Go","permalink":"/pilot-eidu-and-bliss-os-go"}},"content":"![alt text](assets/blissos-go.png \\"Announcement - Bliss OS Go Preview\\")\\n\\n## [Announcement] Bliss OS Go (Preview Release)\\n\\nBliss OS Go is a new variation of Bliss OS that is designed to run on low-end devices. It is based on Android Go, which is a version of Android that is optimized for devices with limited resources. Bliss OS Go includes a number of features that are designed to improve performance, battery life and usability on low-end devices, such as:\\n\\n- A lower-spec config for recents\\n- A lower-spec config for task management\\n- Expanded configuration options\\n- And much more\\n\\nBliss OS Go is currently in release for a number of low-end devices, including:\\n\\n- Intel Atom devices\\n- Intel Celeron N/M devices\\n- Intel Pentium devices\\n- AMD APU/CPUs\\n\\nIf you have a low-end device and you are looking for a new operating system that will improve performance and battery life, then Bliss OS Go is a great option.\\n\\nHere are some additional details about the features of Bliss OS Go:\\n\\n- Lower-spec configs for recents and task management: These configs reduce the amount of resources that are used by the recents and task management apps, which can improve performance and battery life.\\n- Expanded LMKD configuration: LMKD is a Linux kernel module that can be used to improve performance and battery life by limiting the number of interrupts that are generated by hardware devices. The expanded LMKD configuration in Bliss OS Go makes it easier to tune LMKD for optimal performance and battery life.\\n- Rotation/orientation configuration options through Grub: Rotation/orientation configuration options can also be accessed through Grub. This makes it easy to change the rotation and orientation of the Bliss OS Go display without having to reflash the image.\\n\\n### More Info\\n\\n**Warning**, due to the low-spec nature of the devices we are targeting with these builds, we do not include native-bridge by default on Bliss OS Go builds. \\n\\nDownloads can be found on Sourceforge: https://sourceforge.net/projects/blissos-dev/files/BlissOS-Go/FOSS/20230519/\\n\\nConfiguration documentation for some of the features found in Bliss OS Go can be found on our docs site:\\nhttps://docs.blissos.org/configuration/configuration-through-command-line-parameters/"},{"id":"pilot-eidu-and-bliss-os-go","metadata":{"permalink":"/pilot-eidu-and-bliss-os-go","source":"@site/blog/2023/pilot-eidu-and-bliss-os-go.md","title":"[Pilot] EIDU and Bliss OS Go","description":"Collaboration announcement for our partnership with EIDU on a polit program","date":"2023-05-18T00:00:00.000Z","formattedDate":"May 18, 2023","tags":[{"label":"eidu","permalink":"/tags/eidu"},{"label":"blissos","permalink":"/tags/blissos"},{"label":"android-generic","permalink":"/tags/android-generic"},{"label":"bliss-x86","permalink":"/tags/bliss-x-86"}],"readingTime":1.8,"hasTruncateMarker":false,"authors":[{"name":"Jon West","title":"Founder / Developer @BlissCoLabs / Incorporator & CTO / Bliss OS / Android-Generic Project @BlissLabs","url":"https://github.com/electrikjesus","imageURL":"https://avatars.githubusercontent.com/u/8572619?v=4","key":"electrikjesus"}],"frontMatter":{"slug":"pilot-eidu-and-bliss-os-go","title":"[Pilot] EIDU and Bliss OS Go","authors":["electrikjesus"],"description":"Collaboration announcement for our partnership with EIDU on a polit program","img":"assets/eidu-pilot.png","date":"2023-05-18T00:00:00.000Z","comments":true,"tags":["eidu","blissos","android-generic","bliss-x86"]},"prevItem":{"title":"[announcement] Bliss OS Go preview","permalink":"/announcement-bliss-os-go"},"nextItem":{"title":"What can open source do for you?","permalink":"/what-can-open-source-do-for-you"}},"content":"![alt text](assets/eidu-pilot.png \\"EIDU + Bliss OS Go\\")\\n\\n## New Collaborations\\n\\n\\n### [pilot] EIDU - Taifa ElimuTab\\n\\nBliss Co-Labs and [EIDU](https://eidu.com/), an organization that builds innovative solutions to digitize education in low and middle-income countries at scale, have partnered to bring an Android Go 12.1 variation of Bliss OS to the aging Windows tablets used by Kenya public primary schools. The pilot program aims to allow millions of devices a second-life through the use of Bliss OS, which is specifically tailored to the devices\' hardware and capabilities.\\n\\nBliss OS is a lightweight operating system that is designed to run on x86 Windows & Linux devices. It is based on Android, but it has been optimized for performance and battery life. Bliss OS Go is a version of Bliss OS that is designed for lower-powered devices, such as the Intel Atom based Windows tablets that are used in Kenya.\\n\\nThe pilot program will test the feasibility of deploying Bliss OS Go on the Windows tablets. If the pilot is successful, it could lead to the deployment of Bliss OS Go on millions of devices, which would provide students in Kenya with access to a more reliable and affordable educational platform.\\n\\nHere are some of the benefits of using Bliss OS Go on the Windows tablets:\\n\\n* Improved performance: Bliss OS Go is designed to run on low-powered devices, so it can provide a significant performance boost over Windows. This will make it easier for students to use the devices for learning.\\n* Longer battery life: Bliss OS Go is also designed to conserve battery life, so students can use the devices for longer periods of time without having to worry about running out of power.\\n* More affordable: Bliss OS Go is a free and open-source operating system, so it is more affordable than Windows. This will make it possible for schools to deploy Bliss OS Go on more devices, which will benefit more students.\\n\\nWe believe that Bliss OS Go has the potential to make a significant impact on education in Kenya. We are excited to partner with EIDU on this pilot program and we look forward to seeing the results."},{"id":"what-can-open-source-do-for-you","metadata":{"permalink":"/what-can-open-source-do-for-you","source":"@site/blog/2023/what-can-open-source-do-for-you.md","title":"What can open source do for you?","description":"As a business, the typical way to do things is to file for patents, and protect your product or idea, and your product team produces the development design and manages updating the product for its lifecycle. The downside to that is that only your team has the ability to spot its flaws, make it better, or see other avenues where it could be used. This is not the case with an open-source project lifecycle. The product you develop is open to the community to use, inspect and improve upon. This helps accelerate the development of the idea or product by allowing open-innovation to take place.","date":"2023-03-11T00:00:00.000Z","formattedDate":"March 11, 2023","tags":[{"label":"blissos","permalink":"/tags/blissos"},{"label":"android-generic","permalink":"/tags/android-generic"},{"label":"bliss-x86","permalink":"/tags/bliss-x-86"}],"readingTime":2.86,"hasTruncateMarker":false,"authors":[{"name":"Jon West","title":"Founder / Developer @BlissCoLabs / Incorporator & CTO / Bliss OS / Android-Generic Project @BlissLabs","url":"https://github.com/electrikjesus","imageURL":"https://avatars.githubusercontent.com/u/8572619?v=4","key":"electrikjesus"}],"frontMatter":{"slug":"what-can-open-source-do-for-you","title":"What can open source do for you?","authors":["electrikjesus"],"date":"2023-03-11T00:00:00.000Z","comments":true,"tags":["blissos","android-generic","bliss-x86"]},"prevItem":{"title":"[Pilot] EIDU and Bliss OS Go","permalink":"/pilot-eidu-and-bliss-os-go"}},"content":"As a business, the typical way to do things is to file for patents, and protect your product or idea, and your product team produces the development design and manages updating the product for its lifecycle. The downside to that is that only your team has the ability to spot its flaws, make it better, or see other avenues where it could be used. This is not the case with an open-source project lifecycle. The product you develop is open to the community to use, inspect and improve upon. This helps accelerate the development of the idea or product by allowing open-innovation to take place.\\n\\n## Dismissing the current arguments against open-source development\\n\\nCan people take your code and use it for their own projects? The answer is yes, but this is not a bad thing at all. This is one of the things that empowers your idea by allowing you to see the improvements they made and how they made them, then adding those improvements into your code base.\\n\\nCan people alter your code to include malicious code? This depends on how well you manage the pull requests for your code, as even the Linux Kernel has had some bad-actors try and slip in malicious code before, and it was caught by the community. So you just need to make sure you define a strict set of rules for your project maintainers to follow when it comes to merging pull-requests from the community into your code base.\\n\\nCan you make money off Open-Source code? The answer to this is yes, and in many ways. It all comes down to how you design your project and the licensing you choose for it. As many open-source licenses do allow licensing, and support contracts, and many more options can be written into the standard licensing agreements.\\n\\n## How have we leveraged open-source for businesses?\\n\\nAs a consumer, you get to use the products of our work in open-source by testing our work (Bliss OS, Waydroid, Android-x86) on your laptop, tablet, desktop, server, etc. at no cost. \\nAs a business, our projects are limited in use, but can be licensed for inclusion into a project, and we offer development contracts to help businesses further develop their products, with our projects included. We have also created toolkits for businesses to use for free in the past, demonstrating the power of rapid-prototyping through the use of our services.\\n\\nFor other businesses, not used to working in open-source, there will always be hesitations. But that doesn\'t mean we can\'t make it work. We have had some restraints on projects in the past, and the solution for those proprietary constraints is typically to build a system that can handle allowing the end user to use it, while keeping all the private bits, private still. A perfect example of this is how Google Play, Widevine, libndk-translation, Houdini, and other private blobs are included in our projects. We have even gone one step further in this where allowed, and produced tools for the rest of the open-source community to use, that allows them to benefit from using the proprietary blobs, while keeping the businesses private intents intact.\\n\\nIt really all comes down to the mental attitude behind your innovation, and all in how you spin it. It\'s about time the market starts thinking on reasons why they should start going open-source, and not looking for all the reasons why they shouldn\'t."}]}')}}]);