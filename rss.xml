<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>BlissOS Blog Blog</title>
        <link>https://blog.blissos.org/</link>
        <description>BlissOS Blog Blog</description>
        <lastBuildDate>Wed, 21 Jun 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[[announcement] Bliss OS Linux Hybrid Preview (Bliss OS Go edition)]]></title>
            <link>https://blog.blissos.org/bliss-os-linux-hybrid-preview</link>
            <guid>https://blog.blissos.org/bliss-os-linux-hybrid-preview</guid>
            <pubDate>Wed, 21 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Bliss OS Linux Hybrid Preview (Bliss OS Go edition)]]></description>
            <content:encoded><![CDATA[<p>This will be a new addition to the Bliss OS lineup, featuring a number of advancements to running Android on PC hardware. These builds bring the manageability of a full blown Linux distro, along with an Android side for usability and compatibility. It also features a QEMU based Bliss OS session to help with configuration along side Linux, and Bliss OS specific grub menu options to allow the Android side to boot on bare-metal, taking full advantage of the hardware. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="features">Features:<a href="#features" class="hash-link" aria-label="Direct link to Features:" title="Direct link to Features:">​</a></h2><ul><li><p>Based on Xubuntu 22.04.x LTS</p></li><li><p>Stripped of Snap and other Ubuntu apps/telemetry</p></li><li><p>Includes Ubuntu expanded hardware support drivers</p></li><li><p>QEMU based Bliss OS session</p></li><li><p>Bliss OS grub menu options (for running on bare-metal hardware)</p></li><li><p>Includes basic update and management scripts for Android side</p></li><li><p>Lots more, but we are just getting started…</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="download-the-preview">Download the preview:<a href="#download-the-preview" class="hash-link" aria-label="Direct link to Download the preview:" title="Direct link to Download the preview:">​</a></h2><p><a href="https://mega.nz/file/rxgg2CIa#Xe54bBwyrrYZUnawkktKKxnJm9KqHSRPhrud7oXfqaU" target="_blank" rel="noopener noreferrer">https://mega.nz/file/rxgg2CIa#Xe54bBwyrrYZUnawkktKKxnJm9KqHSRPhrud7oXfqaU</a> </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="live-boot-info">Live Boot Info:<a href="#live-boot-info" class="hash-link" aria-label="Direct link to Live Boot Info:" title="Direct link to Live Boot Info:">​</a></h3><p>User: Live</p><p>Password: evolution</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-1">Step 1:<a href="#step-1" class="hash-link" aria-label="Direct link to Step 1:" title="Direct link to Step 1:">​</a></h3><p>Live boot (boots to xfce4)</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-2">Step 2:<a href="#step-2" class="hash-link" aria-label="Direct link to Step 2:" title="Direct link to Step 2:">​</a></h3><p>Run installer (last step shows pop-up to specify data.img size), Done.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-3">Step 3:<a href="#step-3" class="hash-link" aria-label="Direct link to Step 3:" title="Direct link to Step 3:">​</a></h3><p>Reboot (hitting esc once when rebooting to show Grub menu, and select Bliss OS, or xubuntu)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="notes">Notes:<a href="#notes" class="hash-link" aria-label="Direct link to Notes:" title="Direct link to Notes:">​</a></h2><p>Autologin is enabled, will launch last loaded session choice from Login screen</p>]]></content:encoded>
            <category>linux</category>
            <category>hybrid</category>
            <category>android-linux</category>
            <category>android</category>
            <category>android-go</category>
            <category>blissos</category>
            <category>android-generic</category>
            <category>bliss-x86</category>
        </item>
        <item>
            <title><![CDATA[[announcement] Bliss OS Go preview]]></title>
            <link>https://blog.blissos.org/announcement-bliss-os-go</link>
            <guid>https://blog.blissos.org/announcement-bliss-os-go</guid>
            <pubDate>Thu, 08 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Announcement for the Bliss OS Go preview]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="alt text" src="/assets/images/blissos-go-7db870576611893d5de9d7aa1ed4424a.png" title="Announcement - Bliss OS Go Preview" width="1600" height="900" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="announcement-bliss-os-go-preview-release">[Announcement]<!-- --> Bliss OS Go (Preview Release)<a href="#announcement-bliss-os-go-preview-release" class="hash-link" aria-label="Direct link to announcement-bliss-os-go-preview-release" title="Direct link to announcement-bliss-os-go-preview-release">​</a></h2><p>Bliss OS Go is a new variation of Bliss OS that is designed to run on low-end devices. It is based on Android Go, which is a version of Android that is optimized for devices with limited resources. Bliss OS Go includes a number of features that are designed to improve performance, battery life and usability on low-end devices, such as:</p><ul><li>A lower-spec config for recents</li><li>A lower-spec config for task management</li><li>Expanded configuration options</li><li>And much more</li></ul><p>Bliss OS Go is currently in release for a number of low-end devices, including:</p><ul><li>Intel Atom devices</li><li>Intel Celeron N/M devices</li><li>Intel Pentium devices</li><li>AMD APU/CPUs</li></ul><p>If you have a low-end device and you are looking for a new operating system that will improve performance and battery life, then Bliss OS Go is a great option.</p><p>Here are some additional details about the features of Bliss OS Go:</p><ul><li>Lower-spec configs for recents and task management: These configs reduce the amount of resources that are used by the recents and task management apps, which can improve performance and battery life.</li><li>Expanded LMKD configuration: LMKD is a Linux kernel module that can be used to improve performance and battery life by limiting the number of interrupts that are generated by hardware devices. The expanded LMKD configuration in Bliss OS Go makes it easier to tune LMKD for optimal performance and battery life.</li><li>Rotation/orientation configuration options through Grub: Rotation/orientation configuration options can also be accessed through Grub. This makes it easy to change the rotation and orientation of the Bliss OS Go display without having to reflash the image.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="more-info">More Info<a href="#more-info" class="hash-link" aria-label="Direct link to More Info" title="Direct link to More Info">​</a></h3><p><strong>Warning</strong>, due to the low-spec nature of the devices we are targeting with these builds, we do not include native-bridge by default on Bliss OS Go builds. </p><p>Downloads can be found on Sourceforge: <a href="https://sourceforge.net/projects/blissos-dev/files/BlissOS-Go/FOSS/20230519/" target="_blank" rel="noopener noreferrer">https://sourceforge.net/projects/blissos-dev/files/BlissOS-Go/FOSS/20230519/</a></p><p>Configuration documentation for some of the features found in Bliss OS Go can be found on our docs site:
<a href="https://docs.blissos.org/configuration/configuration-through-command-line-parameters/" target="_blank" rel="noopener noreferrer">https://docs.blissos.org/configuration/configuration-through-command-line-parameters/</a></p>]]></content:encoded>
            <category>android-go</category>
            <category>blissos</category>
            <category>android-generic</category>
            <category>bliss-x86</category>
        </item>
        <item>
            <title><![CDATA[[Pilot] EIDU and Bliss OS Go]]></title>
            <link>https://blog.blissos.org/pilot-eidu-and-bliss-os-go</link>
            <guid>https://blog.blissos.org/pilot-eidu-and-bliss-os-go</guid>
            <pubDate>Thu, 18 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Collaboration announcement for our partnership with EIDU on a polit program]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="alt text" src="/assets/images/eidu-pilot-92665ea12cdb84acded5d04670142fc3.png" title="EIDU + Bliss OS Go" width="1600" height="900" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-collaborations">New Collaborations<a href="#new-collaborations" class="hash-link" aria-label="Direct link to New Collaborations" title="Direct link to New Collaborations">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pilot-eidu---taifa-elimutab">[pilot]<!-- --> EIDU - Taifa ElimuTab<a href="#pilot-eidu---taifa-elimutab" class="hash-link" aria-label="Direct link to pilot-eidu---taifa-elimutab" title="Direct link to pilot-eidu---taifa-elimutab">​</a></h3><p>Bliss Co-Labs and <a href="https://eidu.com/" target="_blank" rel="noopener noreferrer">EIDU</a>, an organization that builds innovative solutions to digitize education in low and middle-income countries at scale, have partnered to bring an Android Go 12.1 variation of Bliss OS to the aging Windows tablets used by Kenya public primary schools. The pilot program aims to allow millions of devices a second-life through the use of Bliss OS, which is specifically tailored to the devices' hardware and capabilities.</p><p>Bliss OS is a lightweight operating system that is designed to run on x86 Windows &amp; Linux devices. It is based on Android, but it has been optimized for performance and battery life. Bliss OS Go is a version of Bliss OS that is designed for lower-powered devices, such as the Intel Atom based Windows tablets that are used in Kenya.</p><p>The pilot program will test the feasibility of deploying Bliss OS Go on the Windows tablets. If the pilot is successful, it could lead to the deployment of Bliss OS Go on millions of devices, which would provide students in Kenya with access to a more reliable and affordable educational platform.</p><p>Here are some of the benefits of using Bliss OS Go on the Windows tablets:</p><ul><li>Improved performance: Bliss OS Go is designed to run on low-powered devices, so it can provide a significant performance boost over Windows. This will make it easier for students to use the devices for learning.</li><li>Longer battery life: Bliss OS Go is also designed to conserve battery life, so students can use the devices for longer periods of time without having to worry about running out of power.</li><li>More affordable: Bliss OS Go is a free and open-source operating system, so it is more affordable than Windows. This will make it possible for schools to deploy Bliss OS Go on more devices, which will benefit more students.</li></ul><p>We believe that Bliss OS Go has the potential to make a significant impact on education in Kenya. We are excited to partner with EIDU on this pilot program and we look forward to seeing the results.</p>]]></content:encoded>
            <category>eidu</category>
            <category>blissos</category>
            <category>android-generic</category>
            <category>bliss-x86</category>
        </item>
        <item>
            <title><![CDATA[What can open source do for you?]]></title>
            <link>https://blog.blissos.org/what-can-open-source-do-for-you</link>
            <guid>https://blog.blissos.org/what-can-open-source-do-for-you</guid>
            <pubDate>Sat, 11 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[As a business, the typical way to do things is to file for patents, and protect your product or idea, and your product team produces the development design and manages updating the product for its lifecycle. The downside to that is that only your team has the ability to spot its flaws, make it better, or see other avenues where it could be used. This is not the case with an open-source project lifecycle. The product you develop is open to the community to use, inspect and improve upon. This helps accelerate the development of the idea or product by allowing open-innovation to take place.]]></description>
            <content:encoded><![CDATA[<p>As a business, the typical way to do things is to file for patents, and protect your product or idea, and your product team produces the development design and manages updating the product for its lifecycle. The downside to that is that only your team has the ability to spot its flaws, make it better, or see other avenues where it could be used. This is not the case with an open-source project lifecycle. The product you develop is open to the community to use, inspect and improve upon. This helps accelerate the development of the idea or product by allowing open-innovation to take place.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="dismissing-the-current-arguments-against-open-source-development">Dismissing the current arguments against open-source development<a href="#dismissing-the-current-arguments-against-open-source-development" class="hash-link" aria-label="Direct link to Dismissing the current arguments against open-source development" title="Direct link to Dismissing the current arguments against open-source development">​</a></h2><p>Can people take your code and use it for their own projects? The answer is yes, but this is not a bad thing at all. This is one of the things that empowers your idea by allowing you to see the improvements they made and how they made them, then adding those improvements into your code base.</p><p>Can people alter your code to include malicious code? This depends on how well you manage the pull requests for your code, as even the Linux Kernel has had some bad-actors try and slip in malicious code before, and it was caught by the community. So you just need to make sure you define a strict set of rules for your project maintainers to follow when it comes to merging pull-requests from the community into your code base.</p><p>Can you make money off Open-Source code? The answer to this is yes, and in many ways. It all comes down to how you design your project and the licensing you choose for it. As many open-source licenses do allow licensing, and support contracts, and many more options can be written into the standard licensing agreements.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-have-we-leveraged-open-source-for-businesses">How have we leveraged open-source for businesses?<a href="#how-have-we-leveraged-open-source-for-businesses" class="hash-link" aria-label="Direct link to How have we leveraged open-source for businesses?" title="Direct link to How have we leveraged open-source for businesses?">​</a></h2><p>As a consumer, you get to use the products of our work in open-source by testing our work (Bliss OS, Waydroid, Android-x86) on your laptop, tablet, desktop, server, etc. at no cost.
As a business, our projects are limited in use, but can be licensed for inclusion into a project, and we offer development contracts to help businesses further develop their products, with our projects included. We have also created toolkits for businesses to use for free in the past, demonstrating the power of rapid-prototyping through the use of our services.</p><p>For other businesses, not used to working in open-source, there will always be hesitations. But that doesn't mean we can't make it work. We have had some restraints on projects in the past, and the solution for those proprietary constraints is typically to build a system that can handle allowing the end user to use it, while keeping all the private bits, private still. A perfect example of this is how Google Play, Widevine, libndk-translation, Houdini, and other private blobs are included in our projects. We have even gone one step further in this where allowed, and produced tools for the rest of the open-source community to use, that allows them to benefit from using the proprietary blobs, while keeping the businesses private intents intact.</p><p>It really all comes down to the mental attitude behind your innovation, and all in how you spin it. It's about time the market starts thinking on reasons why they should start going open-source, and not looking for all the reasons why they shouldn't.</p>]]></content:encoded>
            <category>blissos</category>
            <category>android-generic</category>
            <category>bliss-x86</category>
        </item>
    </channel>
</rss>